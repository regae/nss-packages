From 46923db7160ee429b84e5461c85b30c4be817c79 Mon Sep 17 00:00:00 2001
From: Suman Ghosh <sumaghos@codeaurora.org>
Date: Fri, 16 Apr 2021 16:00:02 +0530
Subject: [PATCH] [qca-nss-drv]: Disable modules for low memory profile.

1. wifi-ext-vdev
2. wifi-mesh
3. IPv4 reassembly
4. IPv6 reassembly
5. bridge(Only for IPQ50XX)

Signed-off-by: Suman Ghosh <sumaghos@codeaurora.org>
Change-Id: I12617bf2cbbbfe9c0e9b8a8a5f782931c51c3973
---
 Makefile          | 58 +++++++++++++++++++++++++++++++++--------------
 nss_hal/nss_hal.c | 10 ++++++++
 2 files changed, 51 insertions(+), 17 deletions(-)

--- a/Makefile
+++ b/Makefile
@@ -8,8 +8,6 @@ obj-m += qca-nss-drv.o
 # List the files that belong to the driver in alphabetical order.
 #
 qca-nss-drv-objs := \
-			nss_bridge.o \
-			nss_bridge_log.o \
 			nss_cmn.o \
 			nss_core.o \
 			nss_coredump.o \
@@ -29,9 +27,6 @@ qca-nss-drv-objs := \
 			nss_ipv4_stats.o \
 			nss_ipv4_strings.o \
 			nss_ipv4_log.o \
-			nss_ipv4_reasm.o \
-			nss_ipv4_reasm_stats.o \
-			nss_ipv4_reasm_strings.o \
 			nss_log.o \
 			nss_lso_rx.o \
 			nss_lso_rx_stats.o \
@@ -67,19 +62,44 @@ qca-nss-drv-objs := \
 			nss_wifili_log.o \
 			nss_wifili_stats.o \
 			nss_wifili_strings.o \
-			nss_wifi_mac_db.o \
-			nss_wifi_ext_vdev.o \
-			nss_wifi_ext_vdev_stats.o \
-			nss_wifi_ext_vdev_log.o \
-			nss_wifi_mesh.o \
-			nss_wifi_mesh_log.o \
-			nss_wifi_mesh_stats.o \
-			nss_wifi_mesh_strings.o
+			nss_wifi_mac_db.o
 
 # Base NSS data plane/HAL support
 qca-nss-drv-objs += nss_data_plane/nss_data_plane_common.o
 qca-nss-drv-objs += nss_hal/nss_hal.o
 
+ifneq "$(NSS_DRV_BRIDGE_ENABLE)" "n"
+ccflags-y += -DNSS_DRV_BRIDGE_ENABLE
+qca-nss-drv-objs += \
+		    nss_bridge.o \
+		    nss_bridge_log.o
+endif
+
+ifneq "$(NSS_DRV_WIFI_EXT_VDEV_ENABLE)" "n"
+ccflags-y += -DNSS_DRV_WIFI_EXT_VDEV_ENABLE
+qca-nss-drv-objs += \
+		    nss_wifi_ext_vdev.o \
+		    nss_wifi_ext_vdev_stats.o \
+		    nss_wifi_ext_vdev_log.o
+endif
+
+ifneq "$(NSS_DRV_WIFI_MESH_ENABLE)" "n"
+ccflags-y += -DNSS_DRV_WIFI_MESH_ENABLE
+qca-nss-drv-objs += \
+		    nss_wifi_mesh.o \
+		    nss_wifi_mesh_log.o \
+		    nss_wifi_mesh_stats.o \
+		    nss_wifi_mesh_strings.o
+endif
+
+ifneq "$(NSS_DRV_IPV4_REASM_ENABLE)" "n"
+ccflags-y += -DNSS_DRV_IPV4_REASM_ENABLE
+qca-nss-drv-objs += \
+		    nss_ipv4_reasm.o \
+		    nss_ipv4_reasm_stats.o \
+		    nss_ipv4_reasm_strings.o
+endif
+
 ifneq "$(NSS_DRV_L2TP_ENABLE)" "n"
 ccflags-y += -DNSS_DRV_L2TP_ENABLE
 qca-nss-drv-objs += \
@@ -110,10 +130,14 @@ qca-nss-drv-objs += \
 			nss_ipv6.o \
 			nss_ipv6_stats.o \
 			nss_ipv6_strings.o \
-			nss_ipv6_log.o \
-			nss_ipv6_reasm.o \
-			nss_ipv6_reasm_stats.o \
-			nss_ipv6_reasm_strings.o
+			nss_ipv6_log.o
+ifneq "$(NSS_DRV_IPV6_REASM_ENABLE)" "n"
+ccflags-y += -DNSS_DRV_IPV6_REASM_ENABLE
+qca-nss-drv-objs += \
+		    nss_ipv6_reasm.o \
+		    nss_ipv6_reasm_stats.o \
+		    nss_ipv6_reasm_strings.o
+endif
 endif
 
 ifneq "$(NSS_DRV_TSTAMP_ENABLE)" "n"
--- a/nss_hal/nss_hal.c
+++ b/nss_hal/nss_hal.c
@@ -390,10 +390,12 @@ int nss_hal_probe(struct platform_device
 	}
 #endif
 
+#ifdef NSS_DRV_IPV4_REASM_ENABLE
 	if (npd->ipv4_reasm_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->ipv4_reasm_handler_id = nss_dev->id;
 		nss_ipv4_reasm_register_handler();
 	}
+#endif
 
 #ifdef NSS_DRV_IPV6_ENABLE
 	if (npd->ipv6_enabled == NSS_FEATURE_ENABLED) {
@@ -401,11 +403,13 @@ int nss_hal_probe(struct platform_device
 		nss_ipv6_register_handler();
 	}
 
+#ifdef NSS_DRV_IPV6_REASM_ENABLE
 	if (npd->ipv6_reasm_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->ipv6_reasm_handler_id = nss_dev->id;
 		nss_ipv6_reasm_register_handler();
 	}
 #endif
+#endif
 
 #ifdef NSS_DRV_CRYPTO_ENABLE
 	/*
@@ -564,8 +568,12 @@ int nss_hal_probe(struct platform_device
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_VAP] = nss_dev->id;
 		nss_wifi_register_handler();
 		nss_wifili_register_handler();
+#ifdef NSS_DRV_WIFI_EXT_VDEV_ENABLE
 		nss_wifi_ext_vdev_register_handler();
+#endif
+#ifdef NSS_DRV_WIFI_MESH_ENABLE
 		nss_wifi_mesh_init();
+#endif
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_WIFILI_INTERNAL] = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_WIFILI_EXTERNAL0] = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_WIFILI_EXTERNAL1] = nss_dev->id;
@@ -593,11 +601,13 @@ int nss_hal_probe(struct platform_device
 	}
 #endif
 
+#ifdef NSS_DRV_BRIDGE_ENABLE
 	if (npd->bridge_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->bridge_handler_id = nss_dev->id;
 		nss_top->dynamic_interface_table[NSS_DYNAMIC_INTERFACE_TYPE_BRIDGE] = nss_dev->id;
 		nss_bridge_init();
 	}
+#endif
 
 	if (npd->vlan_enabled == NSS_FEATURE_ENABLED) {
 		nss_top->vlan_handler_id = nss_dev->id;
